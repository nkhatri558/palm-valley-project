/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.geeks.frames;

import com.geeks.beans.AccountBean;
import com.geeks.beans.ProductBean;
import com.geeks.beans.StockBean;
import com.geeks.beans.UserBean;
import com.geeks.dao.AccountDao;
import com.geeks.dao.ProductDao;
import com.geeks.dao.StockDao;
import com.geeks.daoimpl.AccountDaoImpl;
import com.geeks.daoimpl.ProductDaoImpl;
import com.geeks.daoimpl.StockDaoImpl;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khatr
 */
public class StockFrame extends javax.swing.JFrame {

    private UserBean userBean;

    /**
     * Creates new form StockFrame
     */
    public StockFrame(UserBean userBean) throws SQLException {
        initComponents();
        this.userBean = userBean;
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        populateStockTable();
        populateAccountCombo();
        populateProductCombo();
        updateBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        checkAccountNameLbl = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        accountNameCombo = new javax.swing.JComboBox<>();
        productNameCombo = new javax.swing.JComboBox<>();
        stockNameTxt = new javax.swing.JTextField();
        quantityTxt = new javax.swing.JTextField();
        wholeSalePriceTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        retailPriceTxt = new javax.swing.JTextField();
        checkProductNameLbl = new javax.swing.JLabel();
        checkStockNameLbl = new javax.swing.JLabel();
        checkQuantityLbl = new javax.swing.JLabel();
        checkWholeSalePriceLbl = new javax.swing.JLabel();
        checkRetailPriceLbl = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dateTxt = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        stockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stockTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 920, 690));
        getContentPane().add(checkAccountNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(287, 84, 120, 15));

        backBtn.setBackground(new java.awt.Color(64, 38, 28));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 100, 31));

        jLabel8.setBackground(new java.awt.Color(64, 38, 28));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Stocks");
        jLabel8.setOpaque(true);
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 31));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Account");

        jLabel2.setText("Product");

        jLabel3.setText("Stock Name");

        jLabel4.setText("Quantity");

        jLabel5.setText("Whole Sale Price");

        accountNameCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                accountNameComboFocusGained(evt);
            }
        });

        productNameCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                productNameComboFocusGained(evt);
            }
        });

        stockNameTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stockNameTxtFocusGained(evt);
            }
        });

        quantityTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                quantityTxtFocusGained(evt);
            }
        });

        wholeSalePriceTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                wholeSalePriceTxtFocusGained(evt);
            }
        });
        wholeSalePriceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wholeSalePriceTxtActionPerformed(evt);
            }
        });

        jLabel6.setText("Retail Price");

        retailPriceTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                retailPriceTxtFocusGained(evt);
            }
        });

        jLabel7.setText("Date");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(accountNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(productNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(checkProductNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(checkStockNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(stockNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(checkQuantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(wholeSalePriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(checkWholeSalePriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(retailPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(checkRetailPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(productNameCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(checkProductNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(checkStockNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(stockNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(checkQuantityLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wholeSalePriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(checkWholeSalePriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retailPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(checkRetailPriceLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 440, 450));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        addBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/geeks/icons/ADD.png"))); // NOI18N
        addBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/geeks/icons/Update.png"))); // NOI18N
        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/geeks/icons/Delete.png"))); // NOI18N
        deleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(addBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateBtn)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(deleteBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(updateBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 530, 440, 240));

        clearBtn.setBackground(new java.awt.Color(64, 38, 28));
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("Clear");
        clearBtn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        clearBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        getContentPane().add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 40, 100, 31));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setOpaque(true);
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 34, 1360, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wholeSalePriceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wholeSalePriceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wholeSalePriceTxtActionPerformed

    private void accountNameComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accountNameComboFocusGained
        checkAccountNameLbl.setText("");
    }//GEN-LAST:event_accountNameComboFocusGained

    private void productNameComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_productNameComboFocusGained
        checkProductNameLbl.setText("");
    }//GEN-LAST:event_productNameComboFocusGained

    private void stockNameTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stockNameTxtFocusGained
        checkStockNameLbl.setText("");
    }//GEN-LAST:event_stockNameTxtFocusGained

    private void quantityTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_quantityTxtFocusGained
        checkQuantityLbl.setText("");
    }//GEN-LAST:event_quantityTxtFocusGained

    private void wholeSalePriceTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_wholeSalePriceTxtFocusGained
        checkWholeSalePriceLbl.setText("");
    }//GEN-LAST:event_wholeSalePriceTxtFocusGained

    private void retailPriceTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_retailPriceTxtFocusGained
        checkRetailPriceLbl.setText("");
    }//GEN-LAST:event_retailPriceTxtFocusGained

    private void stockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockTableMouseClicked
        Integer id = (Integer) stockTable.getModel().getValueAt(stockTable.getSelectedRow(), 0);
        StockDao stockDao = new StockDaoImpl();
        StockBean stockBean = stockDao.getStockByStockId(id);
        AccountDao accountDao = new AccountDaoImpl();
        AccountBean accountBean = accountDao.getAccountById(stockBean.getAccountBean().getAccountId());
        accountNameCombo.setSelectedItem(accountBean.getAccountName());
        ProductDao productDao = new ProductDaoImpl();
        ProductBean productBean = productDao.getProductByProductId(stockBean.getProductBean().getProductId());
        productNameCombo.setSelectedItem(productBean.getProductName());
        stockNameTxt.setText(stockBean.getStockName());
        quantityTxt.setText(Integer.toString(stockBean.getQuantity()));
        wholeSalePriceTxt.setText(Double.toString(stockBean.getWholeSalePrice()));
        retailPriceTxt.setText(Double.toString(stockBean.getRetailPrice()));
        dateTxt.setDate(stockBean.getDate());
        addBtn.setEnabled(false);
        updateBtn.setEnabled(true);
        deleteBtn.setEnabled(true);
        checkAccountNameLbl.setText("");
        checkProductNameLbl.setText("");
        checkStockNameLbl.setText("");
        checkQuantityLbl.setText("");
        checkWholeSalePriceLbl.setText("");
        checkRetailPriceLbl.setText("");
    }//GEN-LAST:event_stockTableMouseClicked

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        Boolean isValid = validateFields();
        if (isValid) {
            StockDao stockDao = new StockDaoImpl();
            AccountDao accountDao = new AccountDaoImpl();
            ProductDao productDao = new ProductDaoImpl();
            String accountName = accountNameCombo.getSelectedItem().toString();
            AccountBean account = accountDao.getAccountByName(accountName);
            String ProductName = productNameCombo.getSelectedItem().toString();
            ProductBean product = productDao.getProductByProductName(ProductName);
            StockBean stockBean = new StockBean();
            stockBean.setAccountBean(account);
            stockBean.setProductBean(product);
            stockBean.setStockName(stockNameTxt.getText());
            Integer totalQuantity = Integer.parseInt(quantityTxt.getText()) + product.getQuantity();
            product.setQuantity(totalQuantity);
            stockBean.setQuantity(Integer.parseInt(quantityTxt.getText()));
            stockBean.setWholeSalePrice(Double.parseDouble(wholeSalePriceTxt.getText()));
            stockBean.setRetailPrice(Double.parseDouble(retailPriceTxt.getText()));
            product.setPrice(Double.parseDouble(retailPriceTxt.getText()));
            productDao.updateProduct(product);
            SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
            String s = sdf2.format(dateTxt.getDate());
            stockBean.setDate(Date.valueOf(s));
            stockBean.setActive("1");
            stockBean.setCreatedBy(userBean.getUserId());
            Date date = new Date(System.currentTimeMillis());
            DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
            String stringDate = sdf.format(date);
            stockBean.setCreatedDate(Timestamp.valueOf(stringDate));
            stockBean.setModifiedBy(userBean.getUserId());
            stockBean.setModifiedDate(Timestamp.valueOf(stringDate));
            Integer row = stockDao.addStock(stockBean);
            if (row > 0) {
                try {
                    populateStockTable();
                    clearFields();
                } catch (SQLException ex) {
                    Logger.getLogger(StockFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_addBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        RestaurantDashboard dashboard = new RestaurantDashboard(userBean);
        dashboard.setVisible(true);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        Boolean isValid = validateFields();
        if (isValid) {
            Integer id = (Integer) stockTable.getModel().getValueAt(stockTable.getSelectedRow(), 0);
            StockDao stockDao = new StockDaoImpl();
            StockBean stockBean = stockDao.getStockByStockId(id);
            AccountDao accountDao = new AccountDaoImpl();
            ProductDao productDao = new ProductDaoImpl();
            String accountName = accountNameCombo.getSelectedItem().toString();
            AccountBean account = accountDao.getAccountByName(accountName);
            String ProductName = productNameCombo.getSelectedItem().toString();
            ProductBean product = productDao.getProductByProductName(ProductName);
            stockBean.setAccountBean(account);
            stockBean.setProductBean(product);
            stockBean.setStockName(stockNameTxt.getText());
            Integer totalQuantity = Integer.parseInt(quantityTxt.getText()) + product.getQuantity();
            product.setQuantity(totalQuantity);
            stockBean.setQuantity(Integer.parseInt(quantityTxt.getText()));
            stockBean.setWholeSalePrice(Double.parseDouble(wholeSalePriceTxt.getText()));
            stockBean.setRetailPrice(Double.parseDouble(retailPriceTxt.getText()));
            product.setPrice(Double.parseDouble(retailPriceTxt.getText()));
            productDao.updateProduct(product);
            SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
            String s = sdf2.format(dateTxt.getDate());
            stockBean.setDate(Date.valueOf(s));
            Date date = new Date(System.currentTimeMillis());
            DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
            String stringDate = sdf.format(date);
            stockBean.setModifiedBy(userBean.getUserId());
            stockBean.setModifiedDate(Timestamp.valueOf(stringDate));
            Integer row = stockDao.updateStock(stockBean);
            if (row > 0) {
                try {
                    populateStockTable();
                    clearFields();
                } catch (SQLException ex) {
                    Logger.getLogger(StockFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        Integer id = (Integer) stockTable.getModel().getValueAt(stockTable.getSelectedRow(), 0);
        StockDao stockDao = new StockDaoImpl();
        StockBean stockBean = stockDao.getStockByStockId(id);
        stockBean.setActive("0");
        stockBean.setModifiedBy(userBean.getUserId());
        Date date = new Date(System.currentTimeMillis());
        DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSS");
        String stringDate = sdf.format(date);
        stockBean.setModifiedDate(Timestamp.valueOf(stringDate));
        Integer row = stockDao.deleteStock(stockBean);
        if (row > 0) {
            try {
                populateStockTable();
                clearFields();
                ProductDao productDao = new ProductDaoImpl();
                ProductBean productBean = productDao.getProductByProductId(stockBean.getProductBean().getProductId());
                StockBean lastStock = stockDao.getLastStockByProductId(productBean);
                Integer quantity = productBean.getQuantity() - stockBean.getQuantity();
                productBean.setQuantity(quantity);
                productBean.setPrice(lastStock.getRetailPrice());
                productDao.updateProduct(productBean);
            } catch (SQLException ex) {
                Logger.getLogger(StockFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearFields();
    }//GEN-LAST:event_clearBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    private void populateAccountCombo() {
        AccountDao accountDao = new AccountDaoImpl();
        List<AccountBean> accounts = accountDao.getAccounts();
        accountNameCombo.addItem("Select Account");
        for (AccountBean account : accounts) {
            accountNameCombo.addItem(account.getAccountName());
        }
    }

    private void populateProductCombo() {
        ProductDao productDao = new ProductDaoImpl();
        List<ProductBean> products = productDao.getProducts();
        productNameCombo.addItem("Select Product");
        for (ProductBean product : products) {
            productNameCombo.addItem(product.getProductName());
        }
    }

    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }
        return new DefaultTableModel(data, columnNames);
    }

    private void populateStockTable() throws SQLException {
        StockDao stockDao = new StockDaoImpl();
        stockTable.setModel(buildTableModel(stockDao.getAllStockResultSet()));
        stockTable.removeColumn(stockTable.getColumnModel().getColumn(0));
        stockTable.removeColumn(stockTable.getColumnModel().getColumn(stockTable.getColumnCount() - 5));

    }

    private void clearFields() {
        accountNameCombo.setSelectedIndex(0);
        productNameCombo.setSelectedIndex(0);
        stockNameTxt.setText("");
        quantityTxt.setText("");
        wholeSalePriceTxt.setText("");
        retailPriceTxt.setText("");
        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
        Date date = new Date(System.currentTimeMillis());
        String s = sdf2.format(date);
        dateTxt.setDate(Date.valueOf(s));
        addBtn.setEnabled(true);
        updateBtn.setEnabled(false);
        deleteBtn.setEnabled(false);
        checkAccountNameLbl.setText("");
        checkProductNameLbl.setText("");
        checkStockNameLbl.setText("");
        checkQuantityLbl.setText("");
        checkWholeSalePriceLbl.setText("");
        checkRetailPriceLbl.setText("");
    }

    private Boolean validateFields() {
        Boolean isValid = true;
        if (accountNameCombo.getSelectedIndex() == 0) {
            checkAccountNameLbl.setText("*Select Account");
            isValid = false;
        }
        if (productNameCombo.getSelectedIndex() == 0) {
            checkProductNameLbl.setText("*Select Product");
            isValid = false;
        }
        if (stockNameTxt.getText().trim().isEmpty()) {
            checkStockNameLbl.setText("*Empty Field");
            isValid = false;
        }
        if (quantityTxt.getText().trim().isEmpty()) {
            checkQuantityLbl.setText("*Empty Field");
            isValid = false;
        }
        if (wholeSalePriceTxt.getText().trim().isEmpty()) {
            checkWholeSalePriceLbl.setText("*Empty Field");
            isValid = false;
        }
        if (retailPriceTxt.getText().trim().isEmpty()) {
            isValid = false;
            checkRetailPriceLbl.setText("*Empty Field");
        }
        return isValid;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> accountNameCombo;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel checkAccountNameLbl;
    private javax.swing.JLabel checkProductNameLbl;
    private javax.swing.JLabel checkQuantityLbl;
    private javax.swing.JLabel checkRetailPriceLbl;
    private javax.swing.JLabel checkStockNameLbl;
    private javax.swing.JLabel checkWholeSalePriceLbl;
    private javax.swing.JButton clearBtn;
    private com.toedter.calendar.JDateChooser dateTxt;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> productNameCombo;
    private javax.swing.JTextField quantityTxt;
    private javax.swing.JTextField retailPriceTxt;
    private javax.swing.JTextField stockNameTxt;
    private javax.swing.JTable stockTable;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField wholeSalePriceTxt;
    // End of variables declaration//GEN-END:variables
}
